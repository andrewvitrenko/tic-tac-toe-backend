// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Game {
  id        String    @id @default(uuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  players   Player[]
  cells     Cell[]
  state     GameState @default(INITIAL)
  turn      String?
}

model Cell {
  id        String    @id @default(uuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  game      Game      @relation(fields: [gameId], references: [id], onDelete: Cascade)
  gameId    String
  row       Int
  col       Int
  value     CellValue @default(EMPTY)

  @@unique([gameId, row, col])
}

model Player {
  id     String    @id @default(uuid())
  userId String
  user   User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  gameId String
  game   Game      @relation(fields: [gameId], references: [id], onDelete: Cascade)
  sybmol CellValue

  @@unique([gameId, userId])
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  name      String   @unique
  players   Player[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum GameState {
  INITIAL
  IN_PROGRESS
  FINISHED
}

enum CellValue {
  X
  O
  EMPTY
}
